using System;
using System.IO;
using System.Linq;
using System.Windows;
using CommunityToolkit.Mvvm.ComponentModel;
using Microsoft.WindowsAPICodePack.Dialogs;
using sxlib;
using sxlib.Specialized;
using SynUI.Properties;

namespace SynUI.Services;

public interface ISynapseService
{
    SxLibOffscreen Api { get; }
    void Initialize();
}

public class SynapseService : ObservableObject, ISynapseService
{
    private SxLibOffscreen _api;
    
    private static readonly string[] RequiredFiles = {
        "auth/options.bin",
        "auth/sessiontoken.bin",
        "bin/SLAgent.dll"
    };
    
    private static bool _isDirectorySynapse(string path) =>
        RequiredFiles.All(p => File.Exists(Path.Combine(path, p)));

    public SxLibOffscreen Api
    {
        get => _api;
        private set => SetProperty(ref _api, value);
    }

    public void Initialize()
    {
        while (
            string.IsNullOrWhiteSpace(Settings.Default.SynapseDirectory) ||
            !Directory.Exists(Settings.Default.SynapseDirectory) ||
            !_isDirectorySynapse(Settings.Default.SynapseDirectory))
        {
            var dialog = new CommonOpenFileDialog
            {
                Title = "Select your Synapse X's installation folder.",
                IsFolderPicker = true,
                Multiselect = false
            };
        
            if (dialog.ShowDialog() == CommonFileDialogResult.Ok && _isDirectorySynapse(dialog.FileName))
                Settings.Default.SynapseDirectory = dialog.FileName;
            else
            {
                MessageBox.Show(
                    "Please choose your Synapse X Installation folder!\n" +
                    "Your folder is missing these files:\n" +
                    string.Join("\n", RequiredFiles),
                    "Error",
                    MessageBoxButton.OK,
                    MessageBoxImage.Error);
            }
        }
        
        Environment.CurrentDirectory = Settings.Default.SynapseDirectory;
        Api = SxLib.InitializeOffscreen(Directory.GetCurrentDirectory());
        // API.LoadEvent += _sxlib_OnLoadEvent;
        // API.AttachEvent += _sxlib_OnAttachEvent;

        // Add autoexec script
        // var autoexecPath = Path.Combine(Directory.GetCurrentDirectory(), "autoexec", "THIS FILE IS GENERATED BY SYNUI DO NOT REMOVE.lua");
        // if (!File.Exists(autoexecPath))
            // File.WriteAllBytes(autoexecPath, Resources.synui_auto_exec);

        Api.Load();
    }
}