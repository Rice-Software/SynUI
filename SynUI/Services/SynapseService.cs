using System;
using System.IO;
using System.Linq;
using System.Windows;
using CommunityToolkit.Mvvm.ComponentModel;
using CommunityToolkit.Mvvm.Input;
using Microsoft.WindowsAPICodePack.Dialogs;
using sxlib;
using sxlib.Specialized;
using SynUI.Properties;

namespace SynUI.Services;

public interface ISynapseService
{
    SxLibWPF Api { get; }
    SxLibBase.SynLoadEvents LoadState { get; }
    SxLibBase.SynAttachEvents AttachState { get; }

    RelayCommand<string> ExecuteCommand { get; }
    RelayCommand AttachCommand { get; }

    void Initialize();
}

public class SynapseService : ObservableObject, ISynapseService
{
    private static readonly string[] RequiredFiles =
    {
        "auth/options.bin",
        "auth/sessiontoken.bin",
        "bin/SLAgent.dll"
    };

    private SxLibBase.SynAttachEvents _attachState;
    private SxLibBase.SynLoadEvents _loadState;

    public SynapseService()
    {
        ExecuteCommand = new RelayCommand<string>(script => Api?.Execute(script));
        AttachCommand = new RelayCommand(() =>
        {
            if (LoadState == SxLibBase.SynLoadEvents.READY)
                Api?.Attach();
        });
    }

    public RelayCommand<string> ExecuteCommand { get; }
    public RelayCommand AttachCommand { get; }
    
    public SxLibWPF Api { get; private set; }

    public SxLibBase.SynLoadEvents LoadState
    {
        get => _loadState;
        private set => SetProperty(ref _loadState, value);
    }

    public SxLibBase.SynAttachEvents AttachState
    {
        get => _attachState;
        private set => SetProperty(ref _attachState, value);
    }

    public void Initialize()
    {
        while (
            string.IsNullOrWhiteSpace(Settings.Default.SynapseDirectory) ||
            !Directory.Exists(Settings.Default.SynapseDirectory) ||
            !_isDirectorySynapse(Settings.Default.SynapseDirectory))
        {
            var dialog = new CommonOpenFileDialog
            {
                Title = "Select your Synapse X's installation folder.",
                IsFolderPicker = true,
                Multiselect = false
            };

            if (dialog.ShowDialog() == CommonFileDialogResult.Ok && _isDirectorySynapse(dialog.FileName))
                Settings.Default.SynapseDirectory = dialog.FileName;
            else
                MessageBox.Show(
                    "Please choose your Synapse X Installation folder!\n" +
                    "Your folder is missing these files:\n" +
                    string.Join("\n", RequiredFiles),
                    "Error",
                    MessageBoxButton.OK,
                    MessageBoxImage.Error);
        }

        Environment.CurrentDirectory = Settings.Default.SynapseDirectory;
        Api = SxLib.InitializeWPF(Application.Current.MainWindow, Directory.GetCurrentDirectory());
        Api.LoadEvent += _sxlib_OnLoadEvent;
        Api.AttachEvent += _sxlib_OnAttachEvent;

        // Add autoexec script
        var autoexecPath = Path.Combine(Directory.GetCurrentDirectory(), "autoexec",
            "THIS FILE IS GENERATED BY SYNUI DO NOT REMOVE.lua");
        if (!File.Exists(autoexecPath))
            File.WriteAllBytes(autoexecPath, Resources.synui_auto_exec);

        Api.Load();
    }

    private static bool _isDirectorySynapse(string path)
    {
        return RequiredFiles.All(p => File.Exists(Path.Combine(path, p)));
    }

    private void _sxlib_OnAttachEvent(SxLibBase.SynAttachEvents @event, object param)
    {
        AttachState = @event;
    }

    private void _sxlib_OnLoadEvent(SxLibBase.SynLoadEvents @event, object param)
    {
        LoadState = @event;
    }
}